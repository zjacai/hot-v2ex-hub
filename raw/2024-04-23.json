[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1700771269", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1700771269", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 62449, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1700771269", "stars": 8938, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 670855, "username": "xhatt510", "url": "https://www.v2ex.com/u/xhatt510", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/8e76/75f8/670855_mini.png?m=1713782059", "avatar_normal": "https://cdn.v2ex.com/avatar/8e76/75f8/670855_normal.png?m=1713782059", "avatar_large": "https://cdn.v2ex.com/avatar/8e76/75f8/670855_large.png?m=1713782059", "avatar_xlarge": "https://cdn.v2ex.com/avatar/8e76/75f8/670855_xlarge.png?m=1713782059", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/8e76/75f8/670855_xlarge.png?m=1713782059", "created": 1704951356, "last_modified": 1713782059}, "last_reply_by": "0xC000009F", "last_touched": 1713841407, "title": "逆天！干了 3 年的同事用 base64 编码做 token 并且把密码也放了进去", "url": "https://www.v2ex.com/t/1034660", "created": 1713773026, "deleted": 0, "content": "#### 最近做项目，他搞了用户登陆和状态保持。\r\n\r\n##### 当时存的时候他跑过来问我密码要不要用 base64 加密存。\r\n\r\n##### 我说这和明文没啥区别把，区别就是比明文多浪费`1/3`空间。不如直接加盐然后存 md5 。\r\n\r\n当我看到 token 的时候，我人直接傻了。\r\n\r\n##### 这就是 token `YWRtaW58cGFzczEyMzQ1NnwxNzEzNzcxNzg4`\r\n\r\n我相信只要干过开发的人一眼就能认出来这是什么东西。\r\n我本来以为这已经够逆天了。解码出来的内容才真的让人窒息。\r\n\r\n#### `admin|pass123456|1713771788`\r\n\r\n数据库的 user 表里面的用户名和密码也都是`base64 编码`存储的。\r\n\r\n我本以为这种最基本的常识问题，只可能在一个实习生身上发生，但是这个同事至少在这里干了 3 年了\r\n\r\n##### 在他的知识库里 `base64 编码`=加密\r\n\r\n#### 然后只有这种格式的才叫`json`。（用一对花括号包裹`{}`）\r\n\r\n```json\r\n{\r\n    \"test\": 1\r\n}\r\n```\r\n\r\n这种不叫`json`，更别说其他的值类型的被叫`json`\r\n\r\n```json\r\n[\r\n    \"abc\",\r\n    \"def\"\r\n]\r\n```", "content_rendered": "<h4>最近做项目，他搞了用户登陆和状态保持。</h4>\n<h5>当时存的时候他跑过来问我密码要不要用 base64 加密存。</h5>\n<h5>我说这和明文没啥区别把，区别就是比明文多浪费<code>1/3</code>空间。不如直接加盐然后存 md5 。</h5>\n<p>当我看到 token 的时候，我人直接傻了。</p>\n<h5>这就是 token <code>YWRtaW58cGFzczEyMzQ1NnwxNzEzNzcxNzg4</code></h5>\n<p>我相信只要干过开发的人一眼就能认出来这是什么东西。\n我本来以为这已经够逆天了。解码出来的内容才真的让人窒息。</p>\n<h4><code>admin|pass123456|1713771788</code></h4>\n<p>数据库的 user 表里面的用户名和密码也都是<code>base64 编码</code>存储的。</p>\n<p>我本以为这种最基本的常识问题，只可能在一个实习生身上发生，但是这个同事至少在这里干了 3 年了</p>\n<h5>在他的知识库里 <code>base64 编码</code>=加密</h5>\n<h4>然后只有这种格式的才叫<code>json</code>。（用一对花括号包裹<code>{}</code>）</h4>\n<pre><code class=\"language-json\">{\n    \"test\": 1\n}\n</code></pre>\n<p>这种不叫<code>json</code>，更别说其他的值类型的被叫<code>json</code></p>\n<pre><code class=\"language-json\">[\n    \"abc\",\n    \"def\"\n]\n</code></pre>\n", "last_modified": 1713773026, "replies": 163, "id": 1034660}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1695370146", "name": "career", "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1695370146", "title": "职场话题", "url": "https://www.v2ex.com/go/career", "topics": 16856, "footer": "", "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。", "title_alternative": "Career", "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1695370146", "stars": 3096, "aliases": [], "root": false, "id": 770, "parent_node_name": "work"}, "member": {"id": 443258, "username": "comsweetcs", "url": "https://www.v2ex.com/u/comsweetcs", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/a33b1c8808334057f7db35d968c3fe47?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/a33b1c8808334057f7db35d968c3fe47?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/a33b1c8808334057f7db35d968c3fe47?s=73&d=retro", "created": 1569410258, "last_modified": 1713774811}, "last_reply_by": "ryan4290", "last_touched": 1713841646, "title": "你们最长 gap 多久？", "url": "https://www.v2ex.com/t/1034672", "created": 1713774895, "deleted": 0, "content": "楼主 gap 有点久了，对找工作都有点没信心了。想了解下你们 gap 过多久。", "content_rendered": "<p>楼主 gap 有点久了，对找工作都有点没信心了。想了解下你们 gap 过多久。</p>\n", "last_modified": 1713775677, "replies": 135, "id": 1034672}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/3b8a/6142/215_large.png?m=1523190513", "name": "design", "avatar_normal": "https://cdn.v2ex.com/navatar/3b8a/6142/215_normal.png?m=1523190513", "title": "设计", "url": "https://www.v2ex.com/go/design", "topics": 1216, "footer": "", "header": "<strong>Beautiful</strong> <code>adj.</code> <em>Pleasing the senses or mind aesthetically.</em>", "title_alternative": "Design", "avatar_mini": "https://cdn.v2ex.com/navatar/3b8a/6142/215_mini.png?m=1523190513", "stars": 1395, "aliases": [], "root": false, "id": 215, "parent_node_name": "software"}, "member": {"id": 681429, "username": "xiaopanglian", "url": "https://www.v2ex.com/u/xiaopanglian", "website": "https://xiaopanglian.com", "twitter": null, "psn": null, "github": null, "btc": null, "location": "成都", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/9929/fa80/681429_mini.png?m=1711439711", "avatar_normal": "https://cdn.v2ex.com/avatar/9929/fa80/681429_normal.png?m=1711439711", "avatar_large": "https://cdn.v2ex.com/avatar/9929/fa80/681429_large.png?m=1711439711", "avatar_xlarge": "https://cdn.v2ex.com/avatar/9929/fa80/681429_xlarge.png?m=1711439711", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/9929/fa80/681429_xlarge.png?m=1711439711", "created": 1711088842, "last_modified": 1711439711}, "last_reply_by": "scung", "last_touched": 1713841527, "title": "一个好的简约博客大概是什么样的呢？", "url": "https://www.v2ex.com/t/1034691", "created": 1713777336, "deleted": 0, "content": "我看网上很多博客设计，都不是很好看，前几天看到 V 站一个大佬开源的产品，然后看到他的个人博客，感觉挺好看的，[https://xblog.io/]( https://xblog.io/)，这种简约博客我感觉就非常喜欢，有没有其他的类似的博客页面可以参考下呢？", "content_rendered": "<p>我看网上很多博客设计，都不是很好看，前几天看到 V 站一个大佬开源的产品，然后看到他的个人博客，感觉挺好看的，<a href=\"https://xblog.io/\" rel=\"nofollow\">https://xblog.io/</a>，这种简约博客我感觉就非常喜欢，有没有其他的类似的博客页面可以参考下呢？</p>\n", "last_modified": 1713777406, "replies": 103, "id": 1034691}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 218112, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340", "stars": 4148, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 269903, "username": "Variazioni", "url": "https://www.v2ex.com/u/Variazioni", "website": "", "twitter": "", "psn": "", "github": "Var-iazioni", "btc": "", "location": "济南", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/968b/446f/269903_mini.png?m=1713835656", "avatar_normal": "https://cdn.v2ex.com/avatar/968b/446f/269903_normal.png?m=1713835656", "avatar_large": "https://cdn.v2ex.com/avatar/968b/446f/269903_large.png?m=1713835656", "avatar_xlarge": "https://cdn.v2ex.com/avatar/968b/446f/269903_xlarge.png?m=1713835656", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/968b/446f/269903_xlarge.png?m=1713835656", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/968b/446f/269903_xlarge.png?m=1713835656", "created": 1511509553, "last_modified": 1713835656}, "last_reply_by": "dcdlove", "last_touched": 1713841704, "title": "今年是不是很困难的一年？", "url": "https://www.v2ex.com/t/1034815", "created": 1713835535, "deleted": 0, "content": "18 年入职，在北京工作了两年，然后转远程工作回济南，在家工作到现在。\r\n六年间公司从来没有延迟发过工资，然而这个月居然延迟发工资，还不知道哪天能发。\r\n刚买车手头没啥存款，迟一个月发工资可能贷款就还不上，身背 6000 房贷+2500 车贷瞬间就慌了。\r\n济南本地的工作，薪水都好少，稍微高一点的都在高新区或者市中心，通勤太远。而且作为一个 30+的程序员，面试八股文早就忘干净了。\r\n负责公司产品的部分核心功能，虽然现在能稳定运行，但是交接是个很头疼的事。\r\n在纠结是要陪公司熬过这一段时间，还是赶紧走人。", "content_rendered": "18 年入职，在北京工作了两年，然后转远程工作回济南，在家工作到现在。<br />六年间公司从来没有延迟发过工资，然而这个月居然延迟发工资，还不知道哪天能发。<br />刚买车手头没啥存款，迟一个月发工资可能贷款就还不上，身背 6000 房贷+2500 车贷瞬间就慌了。<br />济南本地的工作，薪水都好少，稍微高一点的都在高新区或者市中心，通勤太远。而且作为一个 30+的程序员，面试八股文早就忘干净了。<br />负责公司产品的部分核心功能，虽然现在能稳定运行，但是交接是个很头疼的事。<br />在纠结是要陪公司熬过这一段时间，还是赶紧走人。", "last_modified": 1713835936, "replies": 93, "id": 1034815}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1695370146", "name": "career", "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1695370146", "title": "职场话题", "url": "https://www.v2ex.com/go/career", "topics": 16856, "footer": "", "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。", "title_alternative": "Career", "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1695370146", "stars": 3096, "aliases": [], "root": false, "id": 770, "parent_node_name": "work"}, "member": {"id": 659198, "username": "198plus", "url": "https://www.v2ex.com/u/198plus", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/2c5e7a344a9bb0dc9428763dbe6b6cc5?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/2c5e7a344a9bb0dc9428763dbe6b6cc5?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/2c5e7a344a9bb0dc9428763dbe6b6cc5?s=73&d=retro", "created": 1698932176, "last_modified": 1698932176}, "last_reply_by": "Aruok", "last_touched": 1713841124, "title": "什么工作越老越吃香", "url": "https://www.v2ex.com/t/1034614", "created": 1713767182, "deleted": 0, "content": "现在的情况程序员感觉跟卖肉的差不多，都是吃青春饭。\r\n\r\n那么什么工作不会随年龄增长而薪水不会缩水或被淘汰的呢？\r\n\r\n（或者说工作经验越丰富而越受尊重？）\r\n\r\n现状 IT 就是 35 岁左右滚蛋的多！", "content_rendered": "<p>现在的情况程序员感觉跟卖肉的差不多，都是吃青春饭。</p>\n<p>那么什么工作不会随年龄增长而薪水不会缩水或被淘汰的呢？</p>\n<p>（或者说工作经验越丰富而越受尊重？）</p>\n<p>现状 IT 就是 35 岁左右滚蛋的多！</p>\n", "last_modified": 1713768788, "replies": 85, "id": 1034614}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 218112, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340", "stars": 4148, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 598274, "username": "TNOK", "url": "https://www.v2ex.com/u/TNOK", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/b6a43fd19dc0d2ece418e856b15daaec?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/b6a43fd19dc0d2ece418e856b15daaec?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/b6a43fd19dc0d2ece418e856b15daaec?s=73&d=retro", "created": 1666251320, "last_modified": 1683875725}, "last_reply_by": "zq11211277", "last_touched": 1713841451, "title": "铁路的卖票是不是在贩卖焦虑?", "url": "https://www.v2ex.com/t/1034733", "created": 1713785191, "deleted": 0, "content": "遇到过的情况：\r\n1.同一趟列车，长途票卖，短途票不卖，必须等到快发车几天才放短途票\r\n2.发售日就不放票\r\n\r\n对于第一种，是不是过于功利了？早想着买票的还可能会买不到\r\n对于第二种，你不放票你告诉 XX 日 xx 时开始放票干啥？\r\n\r\n对于出行都比较有计划的人来说很不友好，候补也不一定能候补到\r\n而且如果真的所有空位都卖光，那么一定会有人没买到票", "content_rendered": "遇到过的情况：<br />1.同一趟列车，长途票卖，短途票不卖，必须等到快发车几天才放短途票<br />2.发售日就不放票<br /><br />对于第一种，是不是过于功利了？早想着买票的还可能会买不到<br />对于第二种，你不放票你告诉 XX 日 xx 时开始放票干啥？<br /><br />对于出行都比较有计划的人来说很不友好，候补也不一定能候补到<br />而且如果真的所有空位都卖光，那么一定会有人没买到票", "last_modified": 1713791510, "replies": 70, "id": 1034733}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/67c6/a1e7/47_large.png?m=1608052197", "name": "redis", "avatar_normal": "https://cdn.v2ex.com/navatar/67c6/a1e7/47_normal.png?m=1608052197", "title": "Redis", "url": "https://www.v2ex.com/go/redis", "topics": 401, "footer": "", "header": "Redis 是一个高性能的数据结构服务器。Redis 中的 key 可以支持多种不同的数据结构，包括：字符串，列表，集合，sort set 等等。", "title_alternative": "Redis", "avatar_mini": "https://cdn.v2ex.com/navatar/67c6/a1e7/47_mini.png?m=1608052197", "stars": 1087, "aliases": [], "root": false, "id": 47, "parent_node_name": "db"}, "member": {"id": 657012, "username": "drymonfidelia", "url": "https://www.v2ex.com/u/drymonfidelia", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/017bcef6e642dbf067e17838a9cd447a?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/017bcef6e642dbf067e17838a9cd447a?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/017bcef6e642dbf067e17838a9cd447a?s=73&d=retro", "created": 1698662217, "last_modified": 1712410109}, "last_reply_by": "drymonfidelia", "last_touched": 1713814277, "title": "Redis 几乎每小时都出现大量超时，求助", "url": "https://www.v2ex.com/t/1034586", "created": 1713764122, "deleted": 0, "content": "报错信息是 `Timeout awaiting response (outbound=1KiB, inbound=0KiB, 5728ms elapsed, timeout is 5000ms), command=SET, next: EVAL, inst: 0, qu: 0, qs: 15, aw: False, bw: SpinningDown,\r\nrs: ReadAsync, ws: Idle, in: 76, in-pipe: 0, out-pipe: 0, serverEndpoint: 127.0.0.1:6379, mc: 1/1/0, mgr: 10 of 10 available, clientName: AppProductionEnvServer1(SE.Redis-\r\nv2.5.43.42402), IOCP: (Busy=0,Free=10000,Min=9000,Max=10000), WORKER: (Busy=236,Free=32531,Min=10000,Max=32767), POOL:\r\n(Threads=236,Queueditems=50,Completeditems=8751117254), v: 2.5.43.42402 (Please take a look at this article for some common client-side issues that can cause timeouts:\r\nhttps://stackexchange.github.io/StackExchange.Redis/Timeouts)`\r\n\r\n出错的时候看了下也就三百多并发，比较怀疑是下面这段代码引起的：\r\n\r\n```\r\n   while (!await redis.GetDatabase().LockTakeAsync($\"PlaceOrder:{user.UserId}\", \"1\", TimeSpan.FromSeconds(180)))\r\n        {\r\n            await Task.Delay(1);\r\n        }\r\n```\r\n\r\n作用是确保同一用户只有一个订单未写入数据库（系统下单逻辑涉及几十个函数，全是一些莫名奇妙的判断逻辑，混淆后可读性大幅提升的那种（当然是开玩笑的）），屎山作者已经跑路了，没人能看懂他代码，一个用户下多个订单数据会混乱。更牛逼的这套系统除了性能极差，运行 3 年没出错一次。一次调用 API 只能下一单，客户端随硬件交付，已经写死了，不能更新，然后客户端一次多少个订单就多少并发调用 API 提交，没有队列功能。目前要求 500 订单 10 秒内全部下单完成返回订单号（单独提交的话每个订单 0.01 秒左右能写入完数据拿到订单号）。\r\n\r\n预分配订单号行不通，不运行一遍这部分屎山代码不能确定这个订单能不能提交，返回订单号就代表这个订单提交成功了，不能取消。目前打算改造成 Sub/Pub ，不知道能不能提升性能，或者 V 友有没有更好的改造方案？只要能让这屎山跑起来就行，代码多脏都没关系，改动需要尽可能小，不能把系统改炸。目前加硬件到 256GB 内存都没解决。", "content_rendered": "<p>报错信息是 <code>Timeout awaiting response (outbound=1KiB, inbound=0KiB, 5728ms elapsed, timeout is 5000ms), command=SET, next: EVAL, inst: 0, qu: 0, qs: 15, aw: False, bw: SpinningDown, rs: ReadAsync, ws: Idle, in: 76, in-pipe: 0, out-pipe: 0, serverEndpoint: 127.0.0.1:6379, mc: 1/1/0, mgr: 10 of 10 available, clientName: AppProductionEnvServer1(SE.Redis- v2.5.43.42402), IOCP: (Busy=0,Free=10000,Min=9000,Max=10000), WORKER: (Busy=236,Free=32531,Min=10000,Max=32767), POOL: (Threads=236,Queueditems=50,Completeditems=8751117254), v: 2.5.43.42402 (Please take a look at this article for some common client-side issues that can cause timeouts: <a href=\"https://stackexchange.github.io/StackExchange.Redis/Timeouts\" rel=\"nofollow\">https://stackexchange.github.io/StackExchange.Redis/Timeouts</a>)</code></p>\n<p>出错的时候看了下也就三百多并发，比较怀疑是下面这段代码引起的：</p>\n<pre><code>   while (!await redis.GetDatabase().LockTakeAsync($\"PlaceOrder:{user.UserId}\", \"1\", TimeSpan.FromSeconds(180)))\n        {\n            await Task.Delay(1);\n        }\n</code></pre>\n<p>作用是确保同一用户只有一个订单未写入数据库（系统下单逻辑涉及几十个函数，全是一些莫名奇妙的判断逻辑，混淆后可读性大幅提升的那种（当然是开玩笑的）），屎山作者已经跑路了，没人能看懂他代码，一个用户下多个订单数据会混乱。更牛逼的这套系统除了性能极差，运行 3 年没出错一次。一次调用 API 只能下一单，客户端随硬件交付，已经写死了，不能更新，然后客户端一次多少个订单就多少并发调用 API 提交，没有队列功能。目前要求 500 订单 10 秒内全部下单完成返回订单号（单独提交的话每个订单 0.01 秒左右能写入完数据拿到订单号）。</p>\n<p>预分配订单号行不通，不运行一遍这部分屎山代码不能确定这个订单能不能提交，返回订单号就代表这个订单提交成功了，不能取消。目前打算改造成 Sub/Pub ，不知道能不能提升性能，或者 V 友有没有更好的改造方案？只要能让这屎山跑起来就行，代码多脏都没关系，改动需要尽可能小，不能把系统改炸。目前加硬件到 256GB 内存都没解决。</p>\n", "last_modified": 1713764606, "replies": 64, "id": 1034586}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6353/8fe6/519_large.png?m=1595507885", "name": "ideas", "avatar_normal": "https://cdn.v2ex.com/navatar/6353/8fe6/519_normal.png?m=1595507885", "title": "奇思妙想", "url": "https://www.v2ex.com/go/ideas", "topics": 5965, "footer": "", "header": "让你的创意在这里自由流动吧。", "title_alternative": "Ideas", "avatar_mini": "https://cdn.v2ex.com/navatar/6353/8fe6/519_mini.png?m=1595507885", "stars": 3002, "aliases": [], "root": false, "id": 519, "parent_node_name": "v2ex"}, "member": {"id": 538559, "username": "Chad0000", "url": "https://www.v2ex.com/u/Chad0000", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "现在(2022年12月13日)起，我要立个Flag：干掉Salesforce！", "avatar_mini": "https://cdn.v2ex.com/avatar/8d90/194e/538559_mini.png?m=1709072069", "avatar_normal": "https://cdn.v2ex.com/avatar/8d90/194e/538559_normal.png?m=1709072069", "avatar_large": "https://cdn.v2ex.com/avatar/8d90/194e/538559_large.png?m=1709072069", "avatar_xlarge": "https://cdn.v2ex.com/avatar/8d90/194e/538559_xlarge.png?m=1709072069", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/8d90/194e/538559_xlarge.png?m=1709072069", "created": 1616200323, "last_modified": 1709072069}, "last_reply_by": "winglight2016", "last_touched": 1713841276, "title": "关于铁路的买票问题，我有一个点子不知该不该讲", "url": "https://www.v2ex.com/t/1034821", "created": 1713836206, "deleted": 0, "content": "一趟列车不需要有一个唯一的终点或始发站，相反：\r\n\r\n- 它挂着一堆始发地和目的地不同的车厢（只要顺路即可）\r\n- 每个车厢的终点是确定的，这样有相同目的地的旅客就会被分配到同一车厢\r\n- 列车到站，本站的车厢直接分离，然后再挂上本站出发的车厢继续前进\r\n\r\n优点：\r\n- 旅客不再关注车次，只需要关注从始发到终点站，也注是你的车厢号码和时间\r\n- 不需要再换乘：你的车厢会在某站挂载到另外一个列车上\r\n- 无所谓什么全程不全程的，只要在铁路网上的站点，你基本上都能“直达”\r\n\r\n缺点：\r\n- 动态挂载车厢方案需要考验，站点停靠时间更长\r\n- 不方便共享餐厅这样的大一些的设施\r\n- 跨车厢有走失风险（不方便服务人员）\r\n- 小众目的地会浪费车厢\r\n  - 可以通过更小的车厢降低成本\r\n  - 可以通过更低的发车频繁降低成本\r\n  - 可能合并若干个目的地到一个车厢\r\n  \r\n以上方案如果和地铁打通，那么就意味着从家门到家门基本上无需换乘了。\r\n\r\n非专业人士，欢迎拍砖。", "content_rendered": "<p>一趟列车不需要有一个唯一的终点或始发站，相反：</p>\n<ul>\n<li>它挂着一堆始发地和目的地不同的车厢（只要顺路即可）</li>\n<li>每个车厢的终点是确定的，这样有相同目的地的旅客就会被分配到同一车厢</li>\n<li>列车到站，本站的车厢直接分离，然后再挂上本站出发的车厢继续前进</li>\n</ul>\n<p>优点：</p>\n<ul>\n<li>旅客不再关注车次，只需要关注从始发到终点站，也注是你的车厢号码和时间</li>\n<li>不需要再换乘：你的车厢会在某站挂载到另外一个列车上</li>\n<li>无所谓什么全程不全程的，只要在铁路网上的站点，你基本上都能“直达”</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>动态挂载车厢方案需要考验，站点停靠时间更长</li>\n<li>不方便共享餐厅这样的大一些的设施</li>\n<li>跨车厢有走失风险（不方便服务人员）</li>\n<li>\n小众目的地会浪费车厢<ul>\n<li>可以通过更小的车厢降低成本</li>\n<li>可以通过更低的发车频繁降低成本</li>\n<li>可能合并若干个目的地到一个车厢</li>\n</ul>\n</li>\n</ul>\n<p>以上方案如果和地铁打通，那么就意味着从家门到家门基本上无需换乘了。</p>\n<p>非专业人士，欢迎拍砖。</p>\n", "last_modified": 1713836206, "replies": 54, "id": 1034821}]